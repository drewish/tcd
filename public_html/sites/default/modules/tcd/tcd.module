<?php
/**
 * @file
 * Code for the tcd feature.
 */

include_once('tcd.features.inc');


/**
 * Implement hook_node_view().
 */
function tcd_menu() {
  $items['api/follow'] = array(
    'page callback' => 'tcd_follow_json',
    'delivery callback' => 'tcd_ajax_deliver',
    'access callback' => true,
  );
  $items['api/add_tweets'] = array(
    'page callback' => 'tcd_add_tweets_json',
    'delivery callback' => 'tcd_ajax_deliver',
    'access callback' => true,
  );
  return $items;
}

/**
 * Custom delivery callback.
 */
function tcd_ajax_deliver($json) {
  if (is_null(drupal_get_http_header('Content-Type'))) {
    drupal_add_http_header('Content-Type', 'application/json; charset=utf-8');
  }
  print $json;
  ajax_footer();
}

function tcd_follow_json() {
  $follows = array();
  foreach (node_load_multiple(array(), array('type' => 'site')) as $node) {
    $follows[$node->nid] = array(
      'screen_names' => preg_split("/[\s,]+/", $node->field_twitter_user['und'][0]['value']),
      'last_modified' => $node->changed,
      'hash_tag' => $node->field_twitter_tag['und'][0]['value']
    );
  }
  return drupal_json_encode($follows);
}

/**
 * Callback to write tweets to the database.
 *
 * @TODO add some authentication.
 */
function tcd_add_tweets_json() {
  $data = drupal_json_decode($_POST['json']);
  foreach ($data as $tweet) {
    db_merge('tcd_tweets')
      ->key(array(
        'twitter_id' => $tweet['tweet_id'], 
        'site_nid' => $tweet['site_id']
      ))
      ->fields(array(
        'screen_name' => $tweet['screen_name'],
        'created_time' => $tweet['created_at'] / 1000,
        'text' => $tweet['text'],
      ))
      ->execute();
  }
  return drupal_json_encode(array('status' => 'cool', 'number' => count($data)));
}

/**
 * Implement hook_node_view().
 */
function tcd_node_view($node, $view_mode, $langcode) {
  if ($node->type == 'site') {
    $tweets = db_query_range('SELECT tt.* FROM {tcd_tweets} tt 
      WHERE tt.site_nid = :nid ORDER BY tt.created_time DESC', 0, 100, array(':nid' => $node->nid))
      ->fetchAllAssoc('twitter_id', PDO::FETCH_ASSOC);

    // Add some basic default settings. We should also add some validation since some of these fields aren't required.
    $user_name = $node->field_twitter_user[LANGUAGE_NONE][0]['value'];
    $hash_tag = isset($node->field_twitter_tag[LANGUAGE_NONE][0]['value']) ? $node->field_twitter_tag[LANGUAGE_NONE][0]['value'] : '';
    $type = $node->field_mode[LANGUAGE_NONE][0]['value'];

    drupal_add_js(array('twitter' => array('userName' => $user_name, 'hashTag' => $hash_tag, 'tweetType' => $type, 'tweets' => $tweets)), 'setting');
    drupal_add_js(drupal_get_path('module', 'tcd') . '/tcd_tweets.js');
  } 
}

/**
 * Implement hook_node_delete().
 */
function tcd_node_delete($node) {
  db_query('DELETE FROM {tcd_tweets} WHERE tst.site_nid = :nid', array(':nid' => $node->nid));
}